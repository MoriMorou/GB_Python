# ====================
#      Функции
# ====================

# Функции -  фрагмент программного кода (подпрограмма), к которому можно обратиться из другого места программы


def test(str1, str2):  # Объявление функции (в скобочках - параметры функции)
    """
    Возвращает сумму аргументов
    """
    return "{}/{}".format(str1, str2)  # Возвращаемое значение
    # Если функция ничего не возвращает, она возвращает спец.тип None


result = test('Hello', 'Ivan')
# test("Hello") <-- ошибка, т.к. ожидается два аргумента, а передан один
print(result)

z = 15


def local(x):
    # x, y - локальные переменные, доступны только во время выполнения функции
    # z - глобальная переменная, доступна во всем модуле (.py файле)
    y = 10
    print('x = {}, y = {}, z = {}'.format(x, y, z))


local(5)

# Когда интерпретатор встречает инструкцию def test - создается переменная test с указателем на объект-функцию,
# поэтому функции можно объявлять внутри других инструкций и даже в других функциях
access = True
if access:
    def render(name):
        return 'Welcome, %s' % name
else:
    def render(name):
        return '%s, sorry. Try to enter again.' % name

print(render('Иван'))

# Объявление функции внутри функции используется для создания декораторов и функций-фабрик, но об этом позднее
